{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Header/Header.js","components/Image/useImageHook.js","components/Image/Image.js","components/Book/BookList/BookListItem.js","components/Book/BookList/BookList.js","utils/restClient.js","services/bookService.js","components/Book/useBookHook.js","components/Book/Book.js","components/BookCategory/CategoryList/CategoryListItem.js","components/BookCategory/CategoryList/useCategoriesHook.js","components/BookCategory/CategoryList/CategoryList.js","components/Book/BookList/useBooksHook.js","components/BookCategory/useCategoryHook.js","components/BookCategory/Category.js","components/BookAuthor/AuthorList/AuthorListItem.js","components/BookAuthor/AuthorList/useAuthorsHook.js","components/BookAuthor/AuthorList/AuthorList.js","components/BookAuthor/useAuthorHook.js","components/BookAuthor/Author.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","useState","filteredItems","setFilteredItems","className","onChange","e","target","value","length","items","filter","item","toLowerCase","includes","slice","type","placeholder","map","Header","to","books","useImageHook","src","imageSource","setImageSource","useEffect","onError","Image","title","alt","BookListItem","isbn","thumbnailUrl","BookList","Fragment","book","key","restClient","get","url","a","fetch","response","json","post","put","bookService","getAllBooks","newUrl","process","getBookByIsbn","getAllCategories","getCategoryByName","name","getAllAuthors","getAuthorByName","useBookHook","setBook","then","data","catch","error","console","log","Book","match","params","pageCount","publishedDate","shortDescription","longDescription","status","authors","categories","author","index","category","Date","toDateString","CategoryListItem","useCategoriesHook","setCategories","CategoryList","sortedCategories","newCategories","forEach","push","sort","SortCategories","useBooksHook","setBooks","useCategoryHook","Category","categoryListTitle","Object","keys","categoryName","toUpperCase","categoryBooks","AuthorListItem","useAuthorsHook","setAuthors","AuthorList","sortedAuthors","newAuthors","SortAuthors","useAuthorHook","Author","authorListTitle","authorName","authorBooks","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.203335b5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst SearchBar = props => {\r\n  const [filteredItems, setFilteredItems] = useState(null);\r\n\r\n  const onSearchContentChange = e => {\r\n    if (e.target.value.length === 0) {\r\n      setFilteredItems(null);\r\n    } else {\r\n      setFilteredItems(\r\n        props.items\r\n          .filter(item =>\r\n            item.toLowerCase().includes(e.target.value.toLowerCase())\r\n          )\r\n          .slice(0, 5)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <input\r\n        onChange={onSearchContentChange}\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n      />\r\n      <ul>{filteredItems && filteredItems.map(item => <li>{item}</li>)}</ul>\r\n    </div>\r\n  );\r\n};\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\n\r\nconst Header = props => {\r\n  return (\r\n    <div className=\"topnav\">\r\n      <Link className=\"active\" to={\"/\"}>\r\n        <b>Book Library</b>\r\n      </Link>\r\n      <div className=\"topnav-right\">\r\n        <SearchBar items={props.books} />\r\n        <Link to={\"/\"}>Home</Link>\r\n        <Link to={\"/authors\"}>Authors</Link>\r\n        <Link to={\"/categories\"}>Categories</Link>\r\n        <Link to={\"/about\"}>About</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useImageHook = src => {\r\n  const fallBackImage =\r\n    \"https://www.hultafors.com/assets/img/noimage.png?width=300\";\r\n\r\n  const [imageSource, setImageSource] = useState(src);\r\n\r\n  useEffect(() => {\r\n    setImageSource(src);\r\n  }, [src]);\r\n\r\n  const onError = () => {\r\n    setImageSource(fallBackImage);\r\n  };\r\n\r\n  return { imageSource, onError };\r\n};\r\n\r\nexport default useImageHook;\r\n","import React from \"react\";\r\nimport useImageHook from \"./useImageHook\";\r\n\r\nconst Image = ({ src }) => {\r\n  const { imageSource, onError } = useImageHook(src);\r\n\r\n  return <img src={imageSource} title=\"\" alt=\"\" onError={onError} />;\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Image from \"../../Image/Image\";\r\n\r\nconst BookListItem = ({ title, isbn, thumbnailUrl }) => {\r\n  return (\r\n    <li className=\"book-item\">\r\n      <Link to={`/isbn/${isbn}`}>\r\n        <Image src={thumbnailUrl} />\r\n        <div className=\"title\">{title.slice(0, 20)}...</div>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\nexport default BookListItem;\r\n","import React from \"react\";\r\nimport BookListItem from \"./BookListItem\";\r\n\r\nconst BookList = props => {\r\n  const books = props.books;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!books && <div className=\"loading\">Loading books...</div>}\r\n      {books && (\r\n        <ul className=\"book-list\">\r\n          {books.map(book => {\r\n            return <BookListItem key={book.isbn} {...book} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default BookList;\r\n","const restClient = {\r\n  get: async url => {\r\n    const response = await fetch(url);\r\n    const json = await response.json();\r\n    return json;\r\n  },\r\n  post: {},\r\n  put: {}\r\n};\r\n\r\nexport default restClient;\r\n","import restClient from \"../utils/restClient\";\r\n\r\nconst bookService = {\r\n  getAllBooks: () => {\r\n    let url = process.env.REACT_APP_URL;\r\n    const newUrl = `${url}/books`;\r\n    const books = restClient.get(newUrl);\r\n    return books;\r\n  },\r\n\r\n  getBookByIsbn: isbn => {\r\n    let url = process.env.REACT_APP_URL;\r\n    const newUrl = `${url}/books/${isbn}`;\r\n    const book = restClient.get(newUrl);\r\n    return book;\r\n  },\r\n\r\n  getAllCategories: () => {\r\n    let url = process.env.REACT_APP_URL;\r\n    const newUrl = `${url}/categories`;\r\n    const categories = restClient.get(newUrl);\r\n    return categories;\r\n  },\r\n\r\n  getCategoryByName: name => {\r\n    let url = process.env.REACT_APP_URL;\r\n    const newUrl = `${url}/categories/${name}`;\r\n    const category = restClient.get(newUrl);\r\n    return category;\r\n  },\r\n\r\n  getAllAuthors: () => {\r\n    let url = process.env.REACT_APP_URL;\r\n    const newUrl = `${url}/authors`;\r\n    const authors = restClient.get(newUrl);\r\n    return authors;\r\n  },\r\n\r\n  getAuthorByName: name => {\r\n    let url = process.env.REACT_APP_URL;\r\n    const newUrl = `${url}/authors/${name}`;\r\n    const author = restClient.get(newUrl);\r\n    return author;\r\n  }\r\n};\r\n\r\nexport default bookService;\r\n","import { useState, useEffect } from \"react\";\r\nimport bookService from \"../../services/bookService\";\r\n\r\nconst useBookHook = isbn => {\r\n  const [book, setBook] = useState({});\r\n\r\n  useEffect(() => {\r\n    bookService\r\n      .getBookByIsbn(isbn)\r\n      .then(data => setBook(data))\r\n      .catch(error => console.log(error));\r\n  }, [isbn]);\r\n  return book;\r\n};\r\n\r\nexport default useBookHook;\r\n","import React from \"react\";\r\nimport useBookHook from \"./useBookHook\";\r\nimport Image from \"../Image/Image\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Book = props => {\r\n  console.log(\"book param is\", props.match.params.isbn);\r\n  const book = useBookHook(props.match.params.isbn);\r\n  const {\r\n    isbn,\r\n    title,\r\n    pageCount,\r\n    publishedDate,\r\n    thumbnailUrl,\r\n    shortDescription,\r\n    longDescription,\r\n    status,\r\n    authors = [],\r\n    categories = []\r\n  } = book;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!book && <div>Loading book...</div>}\r\n      {book && (\r\n        <div className=\"book\">\r\n          <div>\r\n            <Image src={thumbnailUrl} />\r\n          </div>\r\n          <div className=\"book-text\">\r\n            <p>\r\n              <b className=\"title-name\">\r\n                <i>{title}</i>\r\n              </b>\r\n              <br />\r\n              Authors: |\r\n              <span>\r\n                <i>\r\n                  {authors.map((author, index) => (\r\n                    <Link key={index} to={`/authors/${author.name}`}>\r\n                      <i className=\"author-name\">{author.name}</i>\r\n                      {\" | \"}\r\n                    </Link>\r\n                  ))}\r\n                </i>\r\n              </span>\r\n              <br />\r\n              Categories: |\r\n              <i>\r\n                {categories.map((category, index) => (\r\n                  <Link key={index} to={`/categories/${category.name}`}>\r\n                    <i className=\"category-name\">{category.name}</i>\r\n                    {\" | \"}\r\n                  </Link>\r\n                ))}\r\n              </i>\r\n            </p>\r\n            <div>\r\n              <header className=\"book-header\">Book Information</header>\r\n              <div className=\"book-header-text\">\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>ISBN</td>\r\n                      <td>{isbn}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Number of Pages</td>\r\n                      <td>{pageCount}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Published Date</td>\r\n                      <td>{new Date(publishedDate).toDateString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Status</td>\r\n                      <td>{status}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <header className=\"book-header\">Book Description</header>\r\n              <div className=\"book-header-text\">\r\n                {shortDescription}\r\n                <br />\r\n                <br />\r\n                {longDescription}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Book;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CategoryListItem = props => {\r\n  return (\r\n    <li className=\"categories-item\">\r\n      <Link to={`/categories/${props.category}`}>{props.category}</Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CategoryListItem;\r\n","import { useState, useEffect } from \"react\";\r\nimport bookService from \"../../../services/bookService\";\r\n\r\nconst useCategoriesHook = () => {\r\n  const [categories, setCategories] = useState(null);\r\n\r\n  useEffect(() => {\r\n    bookService\r\n      .getAllCategories()\r\n      .then(data => setCategories(data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n  return categories;\r\n};\r\nexport default useCategoriesHook;\r\n","import React from \"react\";\r\nimport CategoryListItem from \"./CategoryListItem\";\r\nimport useCategoriesHook from \"./useCategoriesHook\";\r\n\r\nconst SortCategories = categories => {\r\n  let newCategories = [];\r\n  if (categories != null) {\r\n    categories.forEach(category => {\r\n      newCategories.push(category.name);\r\n    });\r\n  }\r\n\r\n  return newCategories.sort();\r\n};\r\n\r\nconst CategoryList = () => {\r\n  const categories = useCategoriesHook();\r\n  const sortedCategories = SortCategories(categories);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!sortedCategories && <div>Loading Categories</div>}\r\n      {sortedCategories && (\r\n        <ul className=\"categories-list\">\r\n          {sortedCategories.map((category, index) => {\r\n            return <CategoryListItem key={index} category={category} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CategoryList;\r\n","import { useState, useEffect } from \"react\";\r\nimport bookService from \"../../../services/bookService\";\r\n\r\nconst useBooksHook = () => {\r\n  const [books, setBooks] = useState(null);\r\n\r\n  useEffect(() => {\r\n    bookService\r\n      .getAllBooks()\r\n      .then(data => setBooks(data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n  return books;\r\n};\r\n\r\nexport default useBooksHook;\r\n","import { useState, useEffect } from \"react\";\r\nimport bookService from \"../../services/bookService\";\r\n\r\nconst useCategoryHook = name => {\r\n  const [categories, setCategories] = useState(null);\r\n\r\n  useEffect(() => {\r\n    bookService\r\n      .getCategoryByName(name)\r\n      .then(data => setCategories(data))\r\n      .catch(error => console.log(error));\r\n  }, [name]);\r\n  return categories;\r\n};\r\nexport default useCategoryHook;\r\n","import React from \"react\";\r\nimport CategoryList from \"./CategoryList/CategoryList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookList from \"../Book/BookList/BookList\";\r\nimport useBooksHook from \"../Book/BookList/useBooksHook\";\r\nimport useCategoryHook from \"./useCategoryHook\";\r\n\r\nconst Category = props => {\r\n  let books = useBooksHook();\r\n  let categoryListTitle;\r\n\r\n  if (Object.keys(props).length === 0) {\r\n    categoryListTitle = \"TOP CATEGORIES\";\r\n  } else {\r\n    categoryListTitle = props.match.params.categoryName.toUpperCase();\r\n  }\r\n\r\n  const category = useCategoryHook(categoryListTitle.toLowerCase());\r\n  let categoryBooks;\r\n\r\n  if (category != null) {\r\n    categoryBooks = category.books;\r\n  }\r\n\r\n  return (\r\n    <div className=\"category-main\">\r\n      <div className=\"category-list-wrapper\">\r\n        <div className=\"category-list-title\">\r\n          <Link to={\"/categories\"}>CATEGORIES</Link>\r\n        </div>\r\n        <CategoryList />\r\n      </div>\r\n      <div className=\"book-category-list\">\r\n        <header className=\"category-list-title\">{categoryListTitle}</header>\r\n        {categoryListTitle === \"TOP CATEGORIES\" && <BookList books={books} />}\r\n        {categoryListTitle !== \"TOP CATEGORIES\" && (\r\n          <BookList books={categoryBooks} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AuthorListItem = props => {\r\n  return (\r\n    <li className=\"authors-item\">\r\n      <Link to={`/authors/${props.author}`}>{props.author}</Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AuthorListItem;\r\n","import { useState, useEffect } from \"react\";\r\nimport bookService from \"../../../services/bookService\";\r\n\r\nconst useAuthorsHook = () => {\r\n  const [authors, setAuthors] = useState(null);\r\n\r\n  useEffect(() => {\r\n    bookService\r\n      .getAllAuthors()\r\n      .then(data => setAuthors(data))\r\n      .catch(error => console.log(error));\r\n  }, []);\r\n  return authors;\r\n};\r\nexport default useAuthorsHook;\r\n","import React from \"react\";\r\nimport AuthorListItem from \"./AuthorListItem\";\r\nimport useAuthorsHook from \"./useAuthorsHook\";\r\n\r\nconst SortAuthors = authors => {\r\n  let newAuthors = [];\r\n  if (authors != null) {\r\n    authors.forEach(author => {\r\n      newAuthors.push(author.name);\r\n    });\r\n  }\r\n  return newAuthors.sort();\r\n};\r\n\r\nconst AuthorList = () => {\r\n  const authors = useAuthorsHook();\r\n  const sortedAuthors = SortAuthors(authors);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!sortedAuthors && <div>Loading Authors</div>}\r\n      {sortedAuthors && (\r\n        <ul className=\"authors-list\">\r\n          {sortedAuthors.map((author, index) => {\r\n            return <AuthorListItem key={index} author={author} />;\r\n          })}\r\n        </ul>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AuthorList;\r\n","import { useState, useEffect } from \"react\";\r\nimport bookService from \"../../services/bookService\";\r\n\r\nconst useAuthorHook = name => {\r\n  const [authors, setAuthors] = useState(null);\r\n\r\n  useEffect(() => {\r\n    bookService\r\n      .getAuthorByName(name)\r\n      .then(data => setAuthors(data))\r\n      .catch(error => console.log(error));\r\n  }, [name]);\r\n  return authors;\r\n};\r\nexport default useAuthorHook;\r\n","import React from \"react\";\r\nimport AuthorList from \"./AuthorList/AuthorList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookList from \"../Book/BookList/BookList\";\r\nimport useBooksHook from \"../Book/BookList/useBooksHook\";\r\nimport useAuthorHook from \"./useAuthorHook\";\r\n\r\nconst Author = props => {\r\n  let books = useBooksHook();\r\n  let authorListTitle;\r\n\r\n  if (Object.keys(props).length === 0) {\r\n    authorListTitle = \"TOP AUTHORS\";\r\n  } else {\r\n    authorListTitle = props.match.params.authorName.toUpperCase();\r\n  }\r\n\r\n  const author = useAuthorHook(authorListTitle.toLowerCase());\r\n  let authorBooks;\r\n\r\n  if (author != null) {\r\n    authorBooks = author.books;\r\n  }\r\n  console.log(author);\r\n\r\n  return (\r\n    <div className=\"author-main\">\r\n      <div className=\"author-list-wrapper\">\r\n        <div className=\"author-list-title\">\r\n          <Link to={\"/authors\"}>AUTHORS</Link>\r\n        </div>\r\n        <AuthorList />\r\n      </div>\r\n      <div className=\"book-author-list\">\r\n        <header className=\"author-list-title\">{authorListTitle}</header>\r\n        {authorListTitle === \"TOP AUTHORS\" && <BookList books={books} />}\r\n        {authorListTitle !== \"TOP AUTHORS\" && <BookList books={authorBooks} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Author;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header/Header\";\r\nimport BookList from \"./components/Book/BookList/BookList\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"./style.scss\";\r\nimport Book from \"./components/Book/Book\";\r\nimport Category from \"./components/BookCategory/Category\";\r\nimport Author from \"./components/BookAuthor/Author\";\r\nimport useBooksHook from \"./components/Book/BookList/useBooksHook\";\r\n\r\nconst App = () => {\r\n  const books = useBooksHook();\r\n\r\n  return (\r\n    <Router>\r\n      <div>{books && <Header books={books.map(book => book.title)} />}</div>\r\n      <Switch>\r\n        <Route path=\"/authors/:authorName\" component={Author}></Route>\r\n        <Route path=\"/authors\">\r\n          <Author />\r\n        </Route>\r\n        <Route path=\"/categories/:categoryName\" component={Category}></Route>\r\n        <Route path=\"/categories\">\r\n          <Category />\r\n        </Route>\r\n        <Route path=\"/isbn/:isbn\" component={Book} />\r\n        <Route exact path=\"/\">\r\n          <div className=\"main-content\">\r\n            <BookList books={books} />\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}